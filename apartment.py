from itertools import count
from tkinter import *
from turtle import width
from PIL import Image, ImageTk 
from tkinter import ttk
from tkinter import messagebox
from pyrsistent import b
from sklearn.feature_extraction import image
from ttkwidgets.autocomplete import AutocompleteCombobox
import sqlite3
from sqlite3 import Error
import os

class Apartment_Availability:
    def __init__(self,root):
        self.root=root
        self.root.config(background='black')
        self.countA=0
        self.countB=0
        self.countC=0
        self.countD=0
        self.countE=0
        self.countF=0
        
        #-------------Size of main window-----------------#
        window_width=810
        window_height=480
        
        #-------Position of main window on desktop--------#
        screen_width=self.root.winfo_screenwidth()
        x=(screen_width/2) - (window_width/2)
        self.root.geometry(f"{window_width}x{window_height}+{int(x+82)}+{int(162)}")
        self.root.resizable(False,False)
        
        #-------Disable draging window-------#
        self.root.overrideredirect(True)

        #---Create new text and button to close window---#
        main_frame=Frame(self.root,bg="white",bd=1,relief=RIDGE)
        main_frame.place(x=0,y=0,width=810,height=30)
        
        text=Label(main_frame,text="Apartment Availability",font=("times new roman",15,"bold"),bg="black",fg="gold")
        text.place(x=-1,y=-2,height=30,width=781)
        
        btn=Button(main_frame,text="X",bg="red",command=self.root.destroy)
        btn.place(x=780,y=-2,height=30,width=30)

        #-------Variables for entry boxes-------#
        self.var_building=StringVar()
        self.var_typehouse=StringVar()
        self.var_address=StringVar()
        self.var_establish=StringVar()
        self.var_lift=StringVar()
        self.var_balcony=StringVar()
        self.var_tv=StringVar()
        self.var_maintenance=StringVar()
        self.var_company=StringVar()
        self.var_water=StringVar()
        self.var_laundry=StringVar()
        self.var_internet=StringVar()
        self.var_electricity=StringVar()
        self.var_deposit=StringVar()
        self.var_rental=StringVar()
        self.var_roomavailable=StringVar()
        self.var_totalroom=StringVar()
        
        #------------Label and entrys on LEFT side---------------#
        labelframeleft=LabelFrame(self.root,text="Apartment Details",font=("times new roman",13,"bold"),relief=RIDGE,bd=2,bg="black",fg="white")
        labelframeleft.place(x=0,y=30,width=280,height=449)
        
        lbl_building=Label(labelframeleft,text="Building",font=("times new roman",12),fg="white",bg="black",padx=2)
        lbl_building.grid(row=0,column=0,sticky=W,pady=(10,0))
        entry_building=Label(labelframeleft,textvariable=self.var_building,font=("times new roman",12),fg="red",bg="black")
        entry_building.grid(row=0,column=1,sticky=W,pady=(10,0))

        lbl_housetype=Label(labelframeleft,text="House Type",font=("times new roman",12),padx=2,pady=1,fg="white",bg="black")
        lbl_housetype.grid(row=1,column=0,sticky=W)
        entry_housetype=Label(labelframeleft,textvariable=self.var_typehouse,font=("times new roman",12),fg="red",bg="black")
        entry_housetype.grid(row=1,column=1,sticky=W)
        
        lbl_address=Label(labelframeleft,text="Address",font=("times new roman",12),padx=2,pady=1,fg="white",bg="black")
        lbl_address.grid(row=2,column=0,sticky=W)
        entry_address=Label(labelframeleft,textvariable=self.var_address,font=("times new roman",12),fg="red",bg="black")
        entry_address.grid(row=2,column=1,sticky=W) 
        
        lbl_establish=Label(labelframeleft,text="Established",font=("times new roman",12),padx=2,pady=1,fg="white",bg="black")
        lbl_establish.grid(row=3,column=0,sticky=W)
        entry_establish=Label(labelframeleft,textvariable=self.var_establish,font=("times new roman",12),fg="white",bg="black")
        entry_establish.grid(row=3,column=1,sticky=W)         
        
        lbl_lift=Label(labelframeleft,text="Lift",font=("times new roman",12),padx=2,pady=1,fg="white",bg="black")
        lbl_lift.grid(row=4,column=0,sticky=W)
        entry_lift=Label(labelframeleft,textvariable=self.var_lift,font=("times new roman",12),fg="white",bg="black")
        entry_lift.grid(row=4,column=1,sticky=W)  
        
        lbl_balcony=Label(labelframeleft,text="Balcony",font=("times new roman",12),padx=2,pady=1,fg="white",bg="black")
        lbl_balcony.grid(row=5,column=0,sticky=W)
        entry_balcony=Label(labelframeleft,textvariable=self.var_balcony,font=("times new roman",12),fg="white",bg="black")
        entry_balcony.grid(row=5,column=1,sticky=W)      

        lbl_tv=Label(labelframeleft,text="TV cable",font=("times new roman",12),padx=2,pady=1,fg="white",bg="black")
        lbl_tv.grid(row=6,column=0,sticky=W)
        entry_tv=Label(labelframeleft,textvariable=self.var_tv,font=("times new roman",12),fg="white",bg="black")
        entry_tv.grid(row=6,column=1,sticky=W) 
                
        lbl_maintenance=Label(labelframeleft,text="Maintenance",font=("times new roman",12),padx=2,pady=1,fg="white",bg="black")
        lbl_maintenance.grid(row=7,column=0,sticky=W)
        entry_maintenance=Label(labelframeleft,textvariable=self.var_maintenance,font=("times new roman",12),fg="white",bg="black")
        entry_maintenance.grid(row=7,column=1,sticky=W)
        
        lbl_company=Label(labelframeleft,text="Company",font=("times new roman",12),padx=2,pady=1,fg="white",bg="black")
        lbl_company.grid(row=8,column=0,sticky=W)
        entry_company=Label(labelframeleft,textvariable=self.var_company,font=("times new roman",12),fg="white",bg="black")
        entry_company.grid(row=8,column=1,sticky=W)        
                 
        lbl_water=Label(labelframeleft,text="Water",font=("times new roman",12),padx=2,pady=1,fg="white",bg="black")
        lbl_water.grid(row=9,column=0,sticky=W)
        entry_water=Label(labelframeleft,textvariable=self.var_water,font=("times new roman",12),fg="red",bg="black")
        entry_water.grid(row=9,column=1,sticky=W)
        
        lbl_laundry=Label(labelframeleft,text="Laundry",font=("times new roman",12),padx=2,pady=1,fg="white",bg="black")
        lbl_laundry.grid(row=10,column=0,sticky=W)
        entry_laundry=Label(labelframeleft,textvariable=self.var_laundry,font=("times new roman",12),fg="red",bg="black")
        entry_laundry.grid(row=10,column=1,sticky=W)

        lbl_internet=Label(labelframeleft,text="Internet",font=("times new roman",12),padx=2,pady=1,fg="white",bg="black")
        lbl_internet.grid(row=11,column=0,sticky=W)
        entry_internet=Label(labelframeleft,textvariable=self.var_internet,font=("times new roman",12),fg="red",bg="black")
        entry_internet.grid(row=11,column=1,sticky=W)
        
        lbl_electricity=Label(labelframeleft,text="Electricity",font=("times new roman",12),padx=2,pady=1,fg="white",bg="black")
        lbl_electricity.grid(row=12,column=0,sticky=W)
        entry_electricity=Label(labelframeleft,textvariable=self.var_electricity,font=("times new roman",12),fg="red",bg="black")
        entry_electricity.grid(row=12,column=1,sticky=W)                        

        lbl_deposit=Label(labelframeleft,text="Housing Deposit",font=("times new roman",12),padx=2,pady=1,fg="white",bg="black")
        lbl_deposit.grid(row=13,column=0,sticky=W)
        entry_deposit=Label(labelframeleft,textvariable=self.var_deposit,font=("times new roman",12),fg="white",bg="black")
        entry_deposit.grid(row=13,column=1,sticky=W)

        lbl_rental=Label(labelframeleft,text="Monthly Rental",font=("times new roman",12),padx=2,pady=1,fg="white",bg="black")
        lbl_rental.grid(row=14,column=0,sticky=W)
        entry_rental=Label(labelframeleft,textvariable=self.var_rental,font=("times new roman",12),fg="red",bg="black")
        entry_rental.grid(row=14,column=1,sticky=W)

        lbl_rooms=Label(labelframeleft,text="Available Rooms",font=("times new roman",12),padx=2,pady=1,fg="white",bg="black")
        lbl_rooms.grid(row=15,column=0,sticky=W)
        self.entry_rooms=Label(labelframeleft,font=("times new roman",12),fg="red",bg="black")
        self.entry_rooms.grid(row=15,column=1,sticky=W)
        lbl_per=Label(labelframeleft,text="/",font=("times new roman",12,"bold"),padx=2,pady=1,fg="white",bg="black")
        lbl_per.place(x=130,y=385)
        self.entry_total=Label(labelframeleft,font=("times new roman",12),padx=2,pady=1,fg="red",bg="black")
        self.entry_total.place(x=139,y=385)

        #------------Label and entrys on RIGHT side---------------#
        self.labelframeright=Label(self.root,text="CLICK BUTTONS BELOW TO SEE HOUSE",fg="red")
        self.labelframeright.place(x=280,y=30,width=530,height=240)
        
        img1=Image.open("E:\Thesis\house\hotel_images\houseA.jpg")
        img1=img1.resize((260,240),Image.ANTIALIAS)
        self.photoimg1=ImageTk.PhotoImage(img1)

        imgB=Image.open("E:\Thesis\house\hotel_images\houseB.jpg")
        imgB=imgB.resize((260,240),Image.ANTIALIAS)
        self.photoimgB=ImageTk.PhotoImage(imgB)

        imgC=Image.open("E:\Thesis\house\hotel_images\houseC.jpg")
        imgC=imgC.resize((260,240),Image.ANTIALIAS)
        self.photoimgC=ImageTk.PhotoImage(imgC)

        imgD=Image.open("E:\Thesis\house\hotel_images\houseD.jpeg")
        imgD=imgD.resize((260,240),Image.ANTIALIAS)
        self.photoimgD=ImageTk.PhotoImage(imgD)

        imgE=Image.open("E:\Thesis\house\hotel_images\houseE.jpg")
        imgE=imgE.resize((260,240),Image.ANTIALIAS)
        self.photoimgE=ImageTk.PhotoImage(imgE)

        imgF=Image.open("E:\Thesis\house\hotel_images\houseF.jpg")
        imgF=imgF.resize((260,240),Image.ANTIALIAS)
        self.photoimgF=ImageTk.PhotoImage(imgF)
                                        
        img2=Image.open("E:\Thesis\house\hotel_images\shared_2h_house.jpg")
        img2=img2.resize((268,240),Image.ANTIALIAS)
        self.photoimg2=ImageTk.PhotoImage(img2)

        img3=Image.open("E:\Thesis\house\hotel_images\shared_3h_house.jpg")
        img3=img3.resize((268,240),Image.ANTIALIAS)
        self.photoimg3=ImageTk.PhotoImage(img3)
        
        img4=Image.open("E:\Thesis\house\hotel_images\gamily_1h_house.jpg")
        img4=img4.resize((268,240),Image.ANTIALIAS)
        self.photoimg4=ImageTk.PhotoImage(img4)     

        img5=Image.open("E:\Thesis\house\hotel_images\gamily_2h_house.jpg")
        img5=img5.resize((268,240),Image.ANTIALIAS)
        self.photoimg5=ImageTk.PhotoImage(img5)           
        
        img=Image.open("E:\Thesis\house\hotel_images\grass.jpeg")
        img=img.resize((530,209),Image.ANTIALIAS)
        self.photoimg=ImageTk.PhotoImage(img)
        
        button_frame=Label(self.root,bg="black",image=self.photoimg,relief=RIDGE)
        button_frame.place(x=280,y=270,width=530,height=209)   
        
        btn1=Button(button_frame,command=self.buildingA,text="Building A",font=("arial",10),width=10)
        btn1.grid(row=0,column=0,padx=(75,50),pady=(60,30))
        
        btn2=Button(button_frame,command=self.buildingB,text="Building B",font=("arial",10),width=10)
        btn2.grid(row=0,column=1,padx=(0,50),pady=(60,30))

        btn3=Button(button_frame,command=self.buildingC,text="Building C",font=("arial",10),width=10)
        btn3.grid(row=0,column=2,padx=(0,50),pady=(60,30))               

        btn4=Button(button_frame,command=self.buildingD,text="Building D",font=("arial",10),width=10)
        btn4.grid(row=1,column=0,padx=(75,50))
        
        btn5=Button(button_frame,command=self.buildingE,text="Building E",font=("arial",10),width=10)
        btn5.grid(row=1,column=1,padx=(0,50),pady=(0,0))

        btn6=Button(button_frame,command=self.buildingF,text="Building F",font=("arial",10),width=10)
        btn6.grid(row=1,column=2,padx=(0,50),pady=(0,0))
        
    def buildingA(self):
        self.countA+=1
        if(self.countA==1):
            lblimg1=Label(self.labelframeright,image=self.photoimg1)
            lblimg1.place(x=-1,y=-1,width=260,height=240)
            lblimg2=Label(self.labelframeright,image=self.photoimg2)
            lblimg2.place(x=260,y=-1,width=268,height=240) 
            conn = sqlite3.connect("E:\Thesis\house\database\house.db")
            my_cursor=conn.cursor()
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building A' AND Type_House='Shared_2h_House' AND Security_ID IS NULL)")
            self.var_roomavailable = my_cursor.fetchall()        
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building A' AND Type_House='Shared_2h_House')")
            self.var_totalroom = my_cursor.fetchall()                      
            self.var_building.set("Building A")
            self.var_typehouse.set("Shared-2h Apartment")
            self.var_address.set("Noradelinahausta")
            self.var_establish.set("2009")
            self.var_lift.set("Yes")
            self.var_balcony.set("Yes")
            self.var_tv.set("Yes")
            self.var_maintenance.set("(+84) XXXXYYYYYY")
            self.var_company.set("bachthy94@gmail.com")
            self.var_water.set("Included in rent")
            self.var_laundry.set("Included in rent")
            self.var_internet.set("Included in rent")
            self.var_electricity.set("Included in rent")
            self.var_deposit.set("200€")
            self.var_rental.set("250€")
            self.entry_rooms.configure(text=self.var_roomavailable)
            self.entry_total.configure(text=self.var_totalroom)                       
        elif(self.countA==2):
            lblimg1=Label(self.labelframeright,image=self.photoimg1)
            lblimg1.place(x=-1,y=-1,width=260,height=240)
            lblimg3=Label(self.labelframeright,image=self.photoimg3)
            lblimg3.place(x=260,y=-1,width=268,height=240)              
            conn = sqlite3.connect("E:\Thesis\house\database\house.db")
            my_cursor=conn.cursor()
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building A' AND Type_House='Shared_3h_House' AND Security_ID IS NULL)")
            self.var_roomavailable = my_cursor.fetchall()        
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building A' AND Type_House='Shared_3h_House')")
            self.var_totalroom = my_cursor.fetchall()                      
            self.var_building.set("Building A")
            self.var_typehouse.set("Shared-3h Apartment")
            self.var_address.set("Noradelinahausta")
            self.var_establish.set("2009")
            self.var_lift.set("Yes")
            self.var_balcony.set("Yes")
            self.var_tv.set("Yes")
            self.var_maintenance.set("(+84) XXXXYYYYYY")
            self.var_company.set("bachthy94@gmail.com")
            self.var_water.set("Included in rent")
            self.var_laundry.set("Included in rent")
            self.var_internet.set("Included in rent")
            self.var_electricity.set("Included in rent")
            self.var_deposit.set("190€")
            self.var_rental.set("225€")
            self.entry_rooms.configure(text=self.var_roomavailable)
            self.entry_total.configure(text=self.var_totalroom)                         
        elif(self.countA==3):
            lblimg1=Label(self.labelframeright,image=self.photoimg1)
            lblimg1.place(x=-1,y=-1,width=260,height=240)
            lblimg4=Label(self.labelframeright,image=self.photoimg4)
            lblimg4.place(x=260,y=-1,width=268,height=240)              
            conn = sqlite3.connect("E:\Thesis\house\database\house.db")
            my_cursor=conn.cursor()
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building A' AND Type_House='Family_1h_House' AND Security_ID IS NULL)")
            self.var_roomavailable = my_cursor.fetchall()        
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building A' AND Type_House='Family_1h_House')")
            self.var_totalroom = my_cursor.fetchall()                        
            self.var_building.set("Building A")
            self.var_typehouse.set("Family-1h Apartment")
            self.var_address.set("Noradelinahausta")
            self.var_establish.set("2009")
            self.var_lift.set("Yes")
            self.var_balcony.set("Yes")
            self.var_tv.set("Yes")
            self.var_maintenance.set("(+84) XXXXYYYYYY")
            self.var_company.set("bachthy94@gmail.com")
            self.var_water.set("Included in rent")
            self.var_laundry.set("Included in rent")
            self.var_internet.set("Included in rent")
            self.var_electricity.set("Included in rent")
            self.var_deposit.set("350€")
            self.var_rental.set("370€")
            self.entry_rooms.configure(text=self.var_roomavailable)
            self.entry_total.configure(text=self.var_totalroom)                                       
        elif(self.countA==4):
            lblimg1=Label(self.labelframeright,image=self.photoimg1)
            lblimg1.place(x=-1,y=-1,width=260,height=240)
            lblimg5=Label(self.labelframeright,image=self.photoimg5)
            lblimg5.place(x=260,y=-1,width=268,height=240)           
            conn = sqlite3.connect("E:\Thesis\house\database\house.db")
            my_cursor=conn.cursor()
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building A' AND Type_House='Family_2h_House' AND Security_ID IS NULL)")
            self.var_roomavailable = my_cursor.fetchall()        
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building A' AND Type_House='Family_2h_House')")
            self.var_totalroom = my_cursor.fetchall()                      
            self.var_building.set("Building A")
            self.var_typehouse.set("Family-2h Apartment")
            self.var_address.set("Noradelinahausta")
            self.var_establish.set("2009")
            self.var_lift.set("Yes")
            self.var_balcony.set("Yes")
            self.var_tv.set("Yes")
            self.var_maintenance.set("(+84) XXXXYYYYYY")
            self.var_company.set("bachthy94@gmail.com")
            self.var_water.set("Included in rent")
            self.var_laundry.set("Included in rent")
            self.var_internet.set("Included in rent")
            self.var_electricity.set("Included in rent")
            self.var_deposit.set("450€")
            self.var_rental.set("460€")
            self.entry_rooms.configure(text=self.var_roomavailable)
            self.entry_total.configure(text=self.var_totalroom)              
            self.countA=0                

    def buildingB(self):
        self.countB+=1
        if(self.countB==1):
            lblimgB=Label(self.labelframeright,image=self.photoimgB)
            lblimgB.place(x=-1,y=-1,width=260,height=240)
            lblimg2=Label(self.labelframeright,image=self.photoimg2)
            lblimg2.place(x=260,y=-1,width=268,height=240)            
            conn = sqlite3.connect("E:\Thesis\house\database\house.db")
            my_cursor=conn.cursor()
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building B' AND Type_House='Shared_2h_House' AND Security_ID IS NULL)")
            self.var_roomavailable = my_cursor.fetchall()        
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building B' AND Type_House='Shared_2h_House')")
            self.var_totalroom = my_cursor.fetchall()                       
            self.var_building.set("Building B")
            self.var_typehouse.set("Shared-2h Apartment")
            self.var_address.set("Tulenkali Hasarana")
            self.var_establish.set("2015")
            self.var_lift.set("Yes")
            self.var_balcony.set("Yes")
            self.var_tv.set("Yes")
            self.var_maintenance.set("(+84) XXXXYYYYYY")
            self.var_company.set("bachthy94@gmail.com")
            self.var_water.set("Included in rent")
            self.var_laundry.set("Included in rent")
            self.var_internet.set("Included in rent")
            self.var_electricity.set("Included in rent")
            self.var_deposit.set("240€")
            self.var_rental.set("260€")
            self.entry_rooms.configure(text=self.var_roomavailable)
            self.entry_total.configure(text=self.var_totalroom)                       
        elif(self.countB==2):
            lblimgB=Label(self.labelframeright,image=self.photoimgB)
            lblimgB.place(x=-1,y=-1,width=260,height=240)
            lblimg3=Label(self.labelframeright,image=self.photoimg3)
            lblimg3.place(x=260,y=-1,width=268,height=240)             
            conn = sqlite3.connect("E:\Thesis\house\database\house.db")
            my_cursor=conn.cursor()
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building B' AND Type_House='Shared_3h_House' AND Security_ID IS NULL)")
            self.var_roomavailable = my_cursor.fetchall()        
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building B' AND Type_House='Shared_3h_House')")
            self.var_totalroom = my_cursor.fetchall()                    
            self.var_building.set("Building B")
            self.var_typehouse.set("Shared-3h Apartment")
            self.var_address.set("Tulenkali Hasarana")
            self.var_establish.set("2015")
            self.var_lift.set("Yes")
            self.var_balcony.set("Yes")
            self.var_tv.set("Yes")
            self.var_maintenance.set("(+84) XXXXYYYYYY")
            self.var_company.set("bachthy94@gmail.com")
            self.var_water.set("Included in rent")
            self.var_laundry.set("Included in rent")
            self.var_internet.set("Included in rent")
            self.var_electricity.set("Included in rent")
            self.var_deposit.set("200€")
            self.var_rental.set("240€")
            self.entry_rooms.configure(text=self.var_roomavailable)
            self.entry_total.configure(text=self.var_totalroom)             
        elif(self.countB==3):
            lblimgB=Label(self.labelframeright,image=self.photoimgB)
            lblimgB.place(x=-1,y=-1,width=260,height=240)
            lblimg4=Label(self.labelframeright,image=self.photoimg4)
            lblimg4.place(x=260,y=-1,width=268,height=240)              
            conn = sqlite3.connect("E:\Thesis\house\database\house.db")
            my_cursor=conn.cursor()
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building B' AND Type_House='Family_1h_House' AND Security_ID IS NULL)")
            self.var_roomavailable = my_cursor.fetchall()        
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building B' AND Type_House='Family_1h_House')")
            self.var_totalroom = my_cursor.fetchall()             
            self.var_building.set("Building B")
            self.var_typehouse.set("Family-1h Apartment")
            self.var_address.set("Tulenkali Hasarana")
            self.var_establish.set("2015")
            self.var_lift.set("Yes")
            self.var_balcony.set("Yes")
            self.var_tv.set("Yes")
            self.var_maintenance.set("(+84) XXXXYYYYYY")
            self.var_company.set("bachthy94@gmail.com")
            self.var_water.set("Included in rent")
            self.var_laundry.set("Included in rent")
            self.var_internet.set("Included in rent")
            self.var_electricity.set("Included in rent")
            self.var_deposit.set("350€")
            self.var_rental.set("380€")
            self.entry_rooms.configure(text=self.var_roomavailable)
            self.entry_total.configure(text=self.var_totalroom)                           
        elif(self.countB==4):
            lblimgB=Label(self.labelframeright,image=self.photoimgB)
            lblimgB.place(x=-1,y=-1,width=260,height=240)
            lblimg5=Label(self.labelframeright,image=self.photoimg5)
            lblimg5.place(x=260,y=-1,width=268,height=240)            
            conn = sqlite3.connect("E:\Thesis\house\database\house.db")
            my_cursor=conn.cursor()
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building B' AND Type_House='Family_2h_House' AND Security_ID IS NULL)")
            self.var_roomavailable = my_cursor.fetchall()        
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building B' AND Type_House='Family_2h_House')")
            self.var_totalroom = my_cursor.fetchall()                        
            self.var_building.set("Building B")
            self.var_typehouse.set("Family-2h Apartment")
            self.var_address.set("Tulenkali Hasarana")
            self.var_establish.set("2015")
            self.var_lift.set("Yes")
            self.var_balcony.set("Yes")
            self.var_tv.set("Yes")
            self.var_maintenance.set("(+84) XXXXYYYYYY")
            self.var_company.set("bachthy94@gmail.com")
            self.var_water.set("Included in rent")
            self.var_laundry.set("Included in rent")
            self.var_internet.set("Included in rent")
            self.var_electricity.set("Included in rent")
            self.var_deposit.set("500€")
            self.var_rental.set("520€")
            self.entry_rooms.configure(text=self.var_roomavailable)
            self.entry_total.configure(text=self.var_totalroom)             
            self.countB=0               

    def buildingC(self):
        self.countC+=1
        if(self.countC==1):
            lblimgC=Label(self.labelframeright,image=self.photoimgC)
            lblimgC.place(x=-1,y=-1,width=260,height=240)
            lblimg2=Label(self.labelframeright,image=self.photoimg2)
            lblimg2.place(x=260,y=-1,width=268,height=240)         
            conn = sqlite3.connect("E:\Thesis\house\database\house.db")
            my_cursor=conn.cursor()
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building C' AND Type_House='Shared_2h_House' AND Security_ID IS NULL)")
            self.var_roomavailable = my_cursor.fetchall()        
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building C' AND Type_House='Shared_2h_House')")
            self.var_totalroom = my_cursor.fetchall()                      
            self.var_building.set("Building C")
            self.var_typehouse.set("Shared-2h Apartment")
            self.var_address.set("Adelinatulusa C")
            self.var_establish.set("2010")
            self.var_lift.set("No")
            self.var_balcony.set("Yes")
            self.var_tv.set("Yes")
            self.var_maintenance.set("(+84) XXXXYYYYYY")
            self.var_company.set("bachthy94@gmail.com")
            self.var_water.set("Not included in rent")
            self.var_laundry.set("Not included in rent")
            self.var_internet.set("Included in rent")
            self.var_electricity.set("Included in rent")
            self.var_deposit.set("270€")
            self.var_rental.set("300€")
            self.entry_rooms.configure(text=self.var_roomavailable)
            self.entry_total.configure(text=self.var_totalroom)                        
        elif(self.countC==2):
            lblimgC=Label(self.labelframeright,image=self.photoimgC)
            lblimgC.place(x=-1,y=-1,width=260,height=240)
            lblimg5=Label(self.labelframeright,image=self.photoimg5)
            lblimg5.place(x=260,y=-1,width=268,height=240)              
            conn = sqlite3.connect("E:\Thesis\house\database\house.db")
            my_cursor=conn.cursor()
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building B' AND Type_House='Family_2h_House' AND Security_ID IS NULL)")
            self.var_roomavailable = my_cursor.fetchall()        
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building B' AND Type_House='Family_2h_House')")
            self.var_totalroom = my_cursor.fetchall()    
            self.var_building.set("Building C")
            self.var_typehouse.set("Family-2h Apartment")
            self.var_address.set("Adelinatulusa C")
            self.var_establish.set("2010")
            self.var_lift.set("No")
            self.var_balcony.set("Yes")
            self.var_tv.set("Yes")
            self.var_maintenance.set("(+84) XXXXYYYYYY")
            self.var_company.set("bachthy94@gmail.com")
            self.var_water.set("Not included in rent")
            self.var_laundry.set("Not included in rent")
            self.var_internet.set("Included in rent")
            self.var_electricity.set("Included in rent")
            self.var_deposit.set("550€")
            self.var_rental.set("590€")
            self.entry_rooms.configure(text=self.var_roomavailable)
            self.entry_total.configure(text=self.var_totalroom)                   
            self.countC=0               

    def buildingD(self):
        self.countD+=1
        if(self.countD==1):
            lblimgD=Label(self.labelframeright,image=self.photoimgD)
            lblimgD.place(x=-1,y=-1,width=260,height=240)
            lblimg4=Label(self.labelframeright,image=self.photoimg4)
            lblimg4.place(x=260,y=-1,width=268,height=240)      
            conn = sqlite3.connect("E:\Thesis\house\database\house.db")
            my_cursor=conn.cursor()
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building D' AND Type_House='Family_1h_House' AND Security_ID IS NULL)")
            self.var_roomavailable = my_cursor.fetchall()        
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building D' AND Type_House='Family_1h_House')")
            self.var_totalroom = my_cursor.fetchall()               
            self.var_building.set("Building D")
            self.var_typehouse.set("Family-1h Apartment")
            self.var_address.set("Kalarentina")
            self.var_establish.set("2018")
            self.var_lift.set("No")
            self.var_balcony.set("Yes")
            self.var_tv.set("Yes")
            self.var_maintenance.set("(+84) XXXXYYYYYY")
            self.var_company.set("bachthy94@gmail.com")
            self.var_water.set("Not included in rent")
            self.var_laundry.set("Not included in rent")
            self.var_internet.set("Included in rent")
            self.var_electricity.set("Included in rent")
            self.var_deposit.set("310€")
            self.var_rental.set("395€")
            self.entry_rooms.configure(text=self.var_roomavailable)
            self.entry_total.configure(text=self.var_totalroom)                        
        elif(self.countD==2):
            lblimgD=Label(self.labelframeright,image=self.photoimgD)
            lblimgD.place(x=-1,y=-1,width=260,height=240)
            lblimg5=Label(self.labelframeright,image=self.photoimg5)
            lblimg5.place(x=260,y=-1,width=268,height=240)         
            conn = sqlite3.connect("E:\Thesis\house\database\house.db")
            my_cursor=conn.cursor()
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building B' AND Type_House='Family_2h_House' AND Security_ID IS NULL)")
            self.var_roomavailable = my_cursor.fetchall()        
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building B' AND Type_House='Family_2h_House')")
            self.var_totalroom = my_cursor.fetchall()                     
            self.var_building.set("Building D")
            self.var_typehouse.set("Family-2h Apartment")
            self.var_address.set("Kalarentina")
            self.var_establish.set("2018")
            self.var_lift.set("No")
            self.var_balcony.set("Yes")
            self.var_tv.set("Yes")
            self.var_maintenance.set("(+84) XXXXYYYYYY")
            self.var_company.set("bachthy94@gmail.com")
            self.var_water.set("Not included in rent")
            self.var_laundry.set("Not included in rent")
            self.var_internet.set("Included in rent")
            self.var_electricity.set("Included in rent")
            self.var_deposit.set("550€")
            self.var_rental.set("600€")
            self.entry_rooms.configure(text=self.var_roomavailable)
            self.entry_total.configure(text=self.var_totalroom)                   
            self.countD=0               

    def buildingE(self):
        self.countE+=1
        if(self.countE==1):
            lblimgE=Label(self.labelframeright,image=self.photoimgE)
            lblimgE.place(x=-1,y=-1,width=260,height=240)
            lblimg4=Label(self.labelframeright,image=self.photoimg4)
            lblimg4.place(x=260,y=-1,width=268,height=240)   
            conn = sqlite3.connect("E:\Thesis\house\database\house.db")
            my_cursor=conn.cursor()
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building E' AND Type_House='Family_1h_House' AND Security_ID IS NULL)")
            self.var_roomavailable = my_cursor.fetchall()        
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building E' AND Type_House='Family_1h_House')")
            self.var_totalroom = my_cursor.fetchall()                    
            self.var_building.set("Building E")
            self.var_typehouse.set("Family-1h Apartment")
            self.var_address.set("Venatiensura E")
            self.var_establish.set("2010")
            self.var_lift.set("No")
            self.var_balcony.set("Yes")
            self.var_tv.set("Yes")
            self.var_maintenance.set("(+84) XXXXYYYYYY")
            self.var_company.set("bachthy94@gmail.com")
            self.var_water.set("Not included in rent")
            self.var_laundry.set("Not included in rent")
            self.var_internet.set("Included in rent")
            self.var_electricity.set("Included in rent")
            self.var_deposit.set("240€")
            self.var_rental.set("350€")
            self.entry_rooms.configure(text=self.var_roomavailable)
            self.entry_total.configure(text=self.var_totalroom)                    
        elif(self.countE==2):
            lblimgE=Label(self.labelframeright,image=self.photoimgE)
            lblimgE.place(x=-1,y=-1,width=260,height=240)
            lblimg5=Label(self.labelframeright,image=self.photoimg5)
            lblimg5.place(x=260,y=-1,width=268,height=240)   
            conn = sqlite3.connect("E:\Thesis\house\database\house.db")
            my_cursor=conn.cursor()
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building E' AND Type_House='Family_2h_House' AND Security_ID IS NULL)")
            self.var_roomavailable = my_cursor.fetchall()        
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building E' AND Type_House='Family_2h_House')")
            self.var_totalroom = my_cursor.fetchall()                  
            self.var_building.set("Building E")
            self.var_typehouse.set("Family-2h Apartment")
            self.var_address.set("Venatiensura E")
            self.var_establish.set("2010")
            self.var_lift.set("No")
            self.var_balcony.set("Yes")
            self.var_tv.set("Yes")
            self.var_maintenance.set("(+84) XXXXYYYYYY")
            self.var_company.set("bachthy94@gmail.com")
            self.var_water.set("Not included in rent")
            self.var_laundry.set("Not included in rent")
            self.var_internet.set("Included in rent")
            self.var_electricity.set("Included in rent")
            self.var_deposit.set("500€")
            self.var_rental.set("550€")
            self.entry_rooms.configure(text=self.var_roomavailable)
            self.entry_total.configure(text=self.var_totalroom)                   
            self.countE=0               

    def buildingF(self):
        self.countF+=1
        if(self.countF==1):
            lblimgF=Label(self.labelframeright,image=self.photoimgF)
            lblimgF.place(x=-1,y=-1,width=260,height=240)
            lblimg2=Label(self.labelframeright,image=self.photoimg2)
            lblimg2.place(x=260,y=-1,width=268,height=240) 
            conn = sqlite3.connect("E:\Thesis\house\database\house.db")
            my_cursor=conn.cursor()
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building F' AND Type_House='Shared_2h_House' AND Security_ID IS NULL)")
            self.var_roomavailable = my_cursor.fetchall()        
            my_cursor.execute("SELECT COUNT(*) FROM renting WHERE (Apartment='Building F' AND Type_House='Shared_2h_House')")
            self.var_totalroom = my_cursor.fetchall()         
            self.var_building.set("Building F")
            self.var_typehouse.set("Shared_2h Apartment")
            self.var_address.set("Marentinkaulo")
            self.var_establish.set("2000")
            self.var_lift.set("No")
            self.var_balcony.set("Yes")
            self.var_tv.set("Yes")
            self.var_maintenance.set("(+84) XXXXYYYYYY")
            self.var_company.set("bachthy94@gmail.com")
            self.var_water.set("Included in rent")
            self.var_laundry.set("Not included in rent")
            self.var_internet.set("Included in rent")
            self.var_electricity.set("Included in rent")
            self.var_deposit.set("200€")
            self.var_rental.set("240€")
            self.entry_rooms.configure(text=self.var_roomavailable)
            self.entry_total.configure(text=self.var_totalroom)               
            self.countF=0                                                
                                                                        
if __name__ == "__main__":
    root=Tk()
    obj=Apartment_Availability(root)
    root.mainloop()        